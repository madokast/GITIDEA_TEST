package learn;

/**
 * 20190905 学习
 * --801
 * AllFilter——过滤器
 * Listener——监听器
 * Servlet01——连上两者成为JAVA EE的三大组建
 *
 * 过滤器filter
 *      生活中的过滤器：净水器，空气净化器，土匪(拦路收钱，拦两次)
 *      定义：拦截服务器的请求，完成特殊功能。例如做一些<b>通用<b/>的操作，如登陆验证、统一编码处理、敏感字符过滤
 *
 *      快速入门
 *          1. 定义一个类，实现接口Filter
 *          2. 覆写方法
 *          3. 配置拦截路径（注解配置、web.xml配置）
 *
 *      细节
 *          web.xml配置拦截路径
 *              见文件
 *
 *          过滤器执行流程
 *              重点：访问进出都要经过过滤器
 *                  进入前执行的代码//////
 *                  chain.doFilter(req, resp);//放行
 *                  出来后执行的代码//////
 *
 *          过滤器生命周期方法
 *              init(FilterConfig)——服务器启动时就执行。不是第一次访问时执行
 *              doFilter(Request, Response, chain)——每次拦截到资源是执行
 *              destroy()——服务器正常关闭时
 *          过滤器注解的其他配置
 *              String[] urlPatterns() default {}; //过滤路径
 *              String[] value() default {}; //同时，即urlPatterns是不显示指明配置
 *
 *              拦截路径配置：
 *                  4种。
 *                  具体的资源路径：/index.jsp——只有访问这个资源才过滤。少见
 *                  目录拦截：/user/*——访问user下的所有资源时过滤器都会执行
 *                  后缀名拦截：*.jsp——访问所有jsp资源时，过滤器都会执行 .do .action——没有/
 *                  所有资源：/*
 *
 *              拦截方式配置：
 *                  资源被访问的方法：
 *                      服务器直接请求
 *                      内部跳转
 *                  配置方法——注解、xml
 *                      DispatcherType[] dispatcherTypes() default {DispatcherType.REQUEST};
 *                          REQUEST：默认值。浏览器直接请求时才拦截
 *                          FORWARD：内部转发
 *                          INCLUDE：包含访问
 *                          ERROR：错误跳转
 *                          ASYNC：SYNC同步，异步访问资源。ajax
 *                   xml配置
 *
 *          过滤器链-多个过滤器
 *              执行顺序？
 *              浏览器---过滤器1---过滤器2---资源
 *              执行顺序：浏览器请求-1-2-资源/响应-2-1-浏览器
 *
 *              过滤器先后问题？
 *              1. 注解配置
 *                  按照类型字符串顺序。
 *                  如A B 都可以拦截，则A先执行，B后执行
 *              2. xml配置
 *                  map睡在上面，谁先执行
 *
 * --809
 * 案例一：登陆验证
 *      需求：访问case资源，验证其是否登陆。如果登陆放行，如果没有登陆，则跳转到登陆截面，并提示“您尚未登陆，请先登录”
 *      术语：权限控制
 *      方法：设置一个过滤器。--判断是否登陆
 *          登陆：放行
 *
 *
 *
 * 案例二：敏感词过滤
 *      需求：录入的数据，经行敏感词汇过滤，替换为***
 *
 */

public class D0905过滤器 {
}
